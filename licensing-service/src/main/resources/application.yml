spring:
  cloud:
    stream:
      bindings:
        inboundOrgChanges:
          destination: orgChangeTopic
          content-type: application/json
          group: licensingGroup
      kafka:
        binder:
          zk-nodes: localhost
          brokers: localhost
  zipkin:
    baseUrl:  http://localhost:9411
  sleuth:
    sampler:
       percentage:  1  #send 100% (1) of the requests to Zipkin

security:
  oauth2:
   resource:
      userInfoUri: http://localhost:8901/user
   client:
     clientId: eagleeye
     clientSecret: thisissecret
     grant-type: client_credentials
     scope: webclient
     accessTokenUri: http://localhost:8901/oauth/token
     userAuthorizationUri: http://localhost:8901/oauth/authorize

eureka:
  instance:
    preferIpAddress: true
  client:
    registerWithEureka: true
    fetchRegistry: true
    serviceUrl:
      defaultZone: http://localhost:8761/eureka/
      
      
#hystrix:
#  command:
#    default:
#      execution: 
#        isolation:
#          thread: 
#            timeoutInMilliseconds: 11000

#ribbon:
#  ConnectTimeout: 10000
#  ReadTimeout: 10000

#Setting logging levels
logging:
  level:
    com.netflix: WARN
    org.springframework.web: WARN
    es.in2.micro: DEBUG
    
---
spring:
  profiles: local
  
#security:
##  user:
##    password: password
#  oauth2:
#   resource:
#     userInfoUri: http://localhost:8901/user
#      
#   client:
#     clientId: eagleeye
#     clientSecret: thisissecret
#     grant-type: client_credentials
#     scope: webclient
#     accessTokenUri: http://localhost:8901/oauth/token
#     userAuthorizationUri: http://localhost:8901/oauth/authorize

